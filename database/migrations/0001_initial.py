# Generated by Django 3.1.3 on 2021-07-06 14:01

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc
import django.utils.timezone
import utility.filepath
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, primary_key=True, serialize=False, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('about', models.TextField(blank=True, max_length=500, null=True)),
                ('number', models.IntegerField(blank=True, null=True, unique=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to=utility.filepath.User_Profile_Picture_Path)),
                ('userid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('MessageId', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('Content', models.TextField(blank=True, null=True)),
                ('File', models.FileField(blank=True, null=True, upload_to=utility.filepath.Message_File_Path)),
                ('ByUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='MessageByUser', to=settings.AUTH_USER_MODEL)),
                ('ToUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='MessageToUser', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('PostId', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('DateTimePosted', models.DateTimeField(default=datetime.datetime(2021, 7, 6, 19, 31, 4, 657927, tzinfo=utc), editable=False)),
                ('Title', models.CharField(max_length=200)),
                ('Content', models.TextField(blank=True, max_length=1000, null=True)),
                ('Image', models.ImageField(blank=True, null=True, upload_to=utility.filepath.Post_Image_Path)),
                ('ByUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('Likes', models.ManyToManyField(related_name='Likes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StarredPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ByUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PostStarredByUser', to=settings.AUTH_USER_MODEL)),
                ('Post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PostStarred', to='database.post')),
            ],
        ),
        migrations.CreateModel(
            name='StarredMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ByUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='MessageStarredByUser', to=settings.AUTH_USER_MODEL)),
                ('Message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='MessageStarred', to='database.message')),
            ],
        ),
    ]
